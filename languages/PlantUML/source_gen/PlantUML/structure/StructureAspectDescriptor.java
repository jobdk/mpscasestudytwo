package PlantUML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCardinality = createDescriptorForCardinality();
  /*package*/ final ConceptDescriptor myConceptClassEntity = createDescriptorForClassEntity();
  /*package*/ final ConceptDescriptor myConceptClassEntityReference = createDescriptorForClassEntityReference();
  /*package*/ final ConceptDescriptor myConceptConstructor = createDescriptorForConstructor();
  /*package*/ final ConceptDescriptor myConceptDependency = createDescriptorForDependency();
  /*package*/ final ConceptDescriptor myConceptElement = createDescriptorForElement();
  /*package*/ final ConceptDescriptor myConceptEntity = createDescriptorForEntity();
  /*package*/ final ConceptDescriptor myConceptEntityElement = createDescriptorForEntityElement();
  /*package*/ final ConceptDescriptor myConceptEntityReference = createDescriptorForEntityReference();
  /*package*/ final ConceptDescriptor myConceptEnumEntity = createDescriptorForEnumEntity();
  /*package*/ final ConceptDescriptor myConceptEnumEntityMember = createDescriptorForEnumEntityMember();
  /*package*/ final ConceptDescriptor myConceptEnumEntityReference = createDescriptorForEnumEntityReference();
  /*package*/ final ConceptDescriptor myConceptField = createDescriptorForField();
  /*package*/ final ConceptDescriptor myConceptMethod = createDescriptorForMethod();
  /*package*/ final ConceptDescriptor myConceptNonAccessModifierEntityElement = createDescriptorForNonAccessModifierEntityElement();
  /*package*/ final ConceptDescriptor myConceptParameter = createDescriptorForParameter();
  /*package*/ final ConceptDescriptor myConceptPlantUML = createDescriptorForPlantUML();
  /*package*/ final ConceptDescriptor myConceptVariable = createDescriptorForVariable();
  /*package*/ final EnumerationDescriptor myEnumerationAccessModifier = new EnumerationDescriptor_AccessModifier();
  /*package*/ final EnumerationDescriptor myEnumerationClassEntityType = new EnumerationDescriptor_ClassEntityType();
  /*package*/ final EnumerationDescriptor myEnumerationDependencyType = new EnumerationDescriptor_DependencyType();
  /*package*/ final EnumerationDescriptor myEnumerationNonAccessModifier = new EnumerationDescriptor_NonAccessModifier();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCardinality, myConceptClassEntity, myConceptClassEntityReference, myConceptConstructor, myConceptDependency, myConceptElement, myConceptEntity, myConceptEntityElement, myConceptEntityReference, myConceptEnumEntity, myConceptEnumEntityMember, myConceptEnumEntityReference, myConceptField, myConceptMethod, myConceptNonAccessModifierEntityElement, myConceptParameter, myConceptPlantUML, myConceptVariable);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Cardinality:
        return myConceptCardinality;
      case LanguageConceptSwitch.ClassEntity:
        return myConceptClassEntity;
      case LanguageConceptSwitch.ClassEntityReference:
        return myConceptClassEntityReference;
      case LanguageConceptSwitch.Constructor:
        return myConceptConstructor;
      case LanguageConceptSwitch.Dependency:
        return myConceptDependency;
      case LanguageConceptSwitch.Element:
        return myConceptElement;
      case LanguageConceptSwitch.Entity:
        return myConceptEntity;
      case LanguageConceptSwitch.EntityElement:
        return myConceptEntityElement;
      case LanguageConceptSwitch.EntityReference:
        return myConceptEntityReference;
      case LanguageConceptSwitch.EnumEntity:
        return myConceptEnumEntity;
      case LanguageConceptSwitch.EnumEntityMember:
        return myConceptEnumEntityMember;
      case LanguageConceptSwitch.EnumEntityReference:
        return myConceptEnumEntityReference;
      case LanguageConceptSwitch.Field:
        return myConceptField;
      case LanguageConceptSwitch.Method:
        return myConceptMethod;
      case LanguageConceptSwitch.NonAccessModifierEntityElement:
        return myConceptNonAccessModifierEntityElement;
      case LanguageConceptSwitch.Parameter:
        return myConceptParameter;
      case LanguageConceptSwitch.PlantUML:
        return myConceptPlantUML;
      case LanguageConceptSwitch.Variable:
        return myConceptVariable;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationAccessModifier, myEnumerationClassEntityType, myEnumerationDependencyType, myEnumerationNonAccessModifier);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCardinality() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "Cardinality", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052acac7L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154291829447");
    b.version(3);
    b.alias("cardinality");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassEntity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "ClassEntity", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43aaL);
    b.class_(false, false, false);
    b.parent(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a3cc5L);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154290746282");
    b.version(3);
    b.property("type", 0x1a5c6983051a43b9L).type(MetaIdFactory.dataTypeId(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43b0L)).origin("1899509154290746297").done();
    b.property("showBody", 0x1a5c6983051a4445L).type(PrimitiveTypeId.BOOLEAN).origin("1899509154290746437").done();
    b.aggregate("elements", 0x1a5c6983051a43dbL).target(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43d4L).optional(true).ordered(true).multiple(true).origin("1899509154290746331").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassEntityReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "ClassEntityReference", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052c86e0L);
    b.class_(false, false, false);
    b.parent(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052c86e3L);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154291943136");
    b.version(3);
    b.associate("classEntity", 0x1a5c6983052c86e1L).target(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43aaL).optional(false).origin("1899509154291943137").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstructor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "Constructor", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43d3L);
    b.class_(false, false, false);
    b.parent(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43d4L);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154290746323");
    b.version(3);
    b.aggregate("parameters", 0x1a5c698305234354L).target(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051cdf2eL).optional(true).ordered(true).multiple(true).origin("1899509154291336020").done();
    b.alias("constructor");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDependency() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "Dependency", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052acab9L);
    b.class_(false, false, false);
    b.parent(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a3cc4L);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154291829433");
    b.version(3);
    b.property("type", 0x1a5c6983052acac1L).type(MetaIdFactory.dataTypeId(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052ac8b1L)).origin("1899509154291829441").done();
    b.property("showLabel", 0x1a5c6983052f0fb7L).type(PrimitiveTypeId.BOOLEAN).origin("1899509154292109239").done();
    b.property("label", 0x1a5c6983052f05a3L).type(PrimitiveTypeId.STRING).origin("1899509154292106659").done();
    b.aggregate("from", 0x1a5c6983052acabcL).target(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052c86e3L).optional(false).ordered(true).multiple(false).origin("1899509154291829436").done();
    b.aggregate("to", 0x1a5c6983052acabeL).target(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052c86e3L).optional(false).ordered(true).multiple(false).origin("1899509154291829438").done();
    b.aggregate("fromCardinality", 0x1a5c6983052acb0fL).target(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052acac7L).optional(true).ordered(true).multiple(false).origin("1899509154291829519").done();
    b.aggregate("toCardinality", 0x1a5c6983052acb13L).target(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052acac7L).optional(true).ordered(true).multiple(false).origin("1899509154291829523").done();
    b.alias("dependency");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "Element", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a3cc4L);
    b.interface_();
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154290744516");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEntity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "Entity", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a3cc5L);
    b.interface_();
    b.parent(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a3cc4L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154290744517");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEntityElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "EntityElement", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43d4L);
    b.interface_();
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154290746324");
    b.version(3);
    b.property("accessModifier", 0x1a5c6983051a43ebL).type(MetaIdFactory.dataTypeId(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43ddL)).origin("1899509154290746347").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEntityReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "EntityReference", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052c86e3L);
    b.interface_();
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154291943139");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnumEntity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "EnumEntity", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43abL);
    b.class_(false, false, false);
    b.parent(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a3cc5L);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154290746283");
    b.version(3);
    b.property("showBody", 0x1a5c69830524b792L).type(PrimitiveTypeId.BOOLEAN).origin("1899509154291431314").done();
    b.aggregate("members", 0x1a5c69830524b771L).target(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c69830524b732L).optional(true).ordered(true).multiple(true).origin("1899509154291431281").done();
    b.alias("enum");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnumEntityMember() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "EnumEntityMember", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c69830524b732L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154291431218");
    b.version(3);
    b.alias("member");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnumEntityReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "EnumEntityReference", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052c86ddL);
    b.class_(false, false, false);
    b.parent(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052c86e3L);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154291943133");
    b.version(3);
    b.associate("enumEntity", 0x1a5c6983052c86deL).target(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43abL).optional(false).origin("1899509154291943134").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "Field", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43bbL);
    b.class_(false, false, false);
    b.parent(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052038d9L);
    b.parent(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051cdf1cL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154290746299");
    b.version(3);
    b.alias("field");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMethod() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "Method", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43bcL);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.parent(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052038d9L);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154290746300");
    b.version(3);
    b.property("type", 0x1a5c69830538c3b9L).type(PrimitiveTypeId.STRING).origin("1899509154292745145").done();
    b.aggregate("parameters", 0x1a5c69830523bbcdL).target(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051cdf2eL).optional(true).ordered(true).multiple(true).origin("1899509154291366861").done();
    b.alias("method");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNonAccessModifierEntityElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "NonAccessModifierEntityElement", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983052038d9L);
    b.interface_();
    b.parent(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a43d4L);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154291136729");
    b.version(3);
    b.property("showNonAccessModifier", 0x1a5c69830521497dL).type(PrimitiveTypeId.BOOLEAN).origin("1899509154291206525").done();
    b.property("nonAccessModifier", 0x1a5c6983052038dbL).type(MetaIdFactory.dataTypeId(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051cdee4L)).origin("1899509154291136731").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "Parameter", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051cdf2eL);
    b.class_(false, false, false);
    b.parent(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051cdf1cL);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154290917166");
    b.version(3);
    b.alias("parameter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPlantUML() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "PlantUML", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a3cc2L);
    b.class_(false, false, true);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154290744514");
    b.version(3);
    b.aggregate("elements", 0x1a5c6983051a3ccbL).target(0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051a3cc4L).optional(true).ordered(true).multiple(true).origin("1899509154290744523").done();
    b.alias("plant uml");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PlantUML", "Variable", 0x2ff0a41f288043b3L, 0xa889f912d65b3892L, 0x1a5c6983051cdf1cL);
    b.interface_();
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.origin("r:5ffd829d-cb20-4a43-9201-504c19294a4a(PlantUML.structure)/1899509154290917148");
    b.version(3);
    b.property("type", 0x1a5c69830537d088L).type(PrimitiveTypeId.STRING).origin("1899509154292682888").done();
    return b.create();
  }
}
